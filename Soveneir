import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class test {
	
	static int printSubsets(int set[])
    {
        int n = set.length;
 
        // Run a loop for printing all 2^n
        // subsets one by obe
        Set<ArrayList<Integer>> a  = new HashSet<ArrayList<Integer>>();
        for (int i = 0; i < (1<<n); i++)
        {
            System.out.print("{ ");
            ArrayList<Integer> subset = new ArrayList<Integer>();
            // Print current subset
            for (int j = 0; j < n; j++)
 
                
                if ((i & (1 << j)) > 0) {
                	
                	//add logic here to store them in a hashset
                    System.out.print(set[j] + " ");
                    subset.add(set[j]);
                }
            a.add(subset);
            System.out.println("}");
        }
        
        // Get the sum of each set and count till 3. Run through all the elements
        
        Map<Integer,Integer> storeSum = new HashMap<Integer,Integer>();
        
        for (ArrayList e : a) {
        	for (Integer element : e) {
        		
        	}
        }
        
        
        
        System.out.println("length of hash set-->"+a.size());
        
        return 0;
    }


	public static void main(String[] args) {
		
		 int set[] = {3,3,3};
	        int val= printSubsets(set);
	        System.out.println("value is-->"+val);
		
		

	}

}
